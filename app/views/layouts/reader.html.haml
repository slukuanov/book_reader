!!!
%html.no-js{:lang => "en"}
  %head
    %meta{:charset => "UTF-8"}/
    %meta{:content => "IE=edge,chrome=1", "http-equiv" => "X-UA-Compatible"}/
    %meta{:content => "width=device-width, initial-scale=1.0", :name => "viewport"}/
    %title Book Reader
    = stylesheet_link_tag 'reader'
    %script{:src => "/assets/javascripts/modernizr.custom.79639.js", :type => "text/javascript"}
    = csrf_meta_tags
  %body{:oncopy => "return false", :oncut => "return false", :onpaste => "return false"}
    #container.container
      = yield
      = javascript_include_tag 'reader.js'

    :javascript
      $(function() {

          Page.init();

      });

      /**********************
       * SOME COMMON FUNCTIONS
       **********************/
      //prevent default event behaviour
      var prevent_default = function(event) {
          event = (event) ? event : window.event;
          if (event.preventDefault)
          {
              event.preventDefault();
          }
          else
          {
              event.returnValue = false;
          }
      };
      //add event handler
      var add_event = function(element, type, listener) {
          if (element.addEventListener)
          {
              element.addEventListener(type, listener, false);
          }
          else
          {
              element.attachEvent('on' + type, listener);
          }
      };
      /**********************
       * PROTECTING CONTENT
       **********************/
      //disable right click
      var disable_click = function() {
          //check if right mouse button was pressed
          var check_button = function(e) {
              var rightclick = false;
              if (!e)
                  var e = window.event;
              if (e.which)
                  rightclick = (e.which == 3);
              else if (e.button)
                  rightclick = (e.button == 2);
              return rightclick;
          };
          //disable right button
          var disable = function(e) {
              if (check_button(e))
              {
                  prevent_default(e);
              }
          };
          //add it to events
          add_event(document, "mouseup", function(e) {
              disable(e);
              return false;
          });
          add_event(document, "mousedown", function(e) {
              disable(e);
              return false;
          });
          add_event(document, "contextmenu", function(e) {
              disable(e);
              return false;
          });
      };

      //disable page printing
      var disable_print = function() {
          var head = document.getElementsByTagName('head')[0];
          //create style for print media and hide body
          var newStyle = document.createElement('style');
          newStyle.setAttribute('type', 'text/css');
          newStyle.setAttribute('media', 'print');
          newStyle.appendChild(document.createTextNode('body {display: none;}'));
          head.appendChild(newStyle);
      }
      disable_click();
      disable_print();

      $(document).ready(function(){
        $.blockUI({
          css: {
            border: 'none',
            padding: '15px',
            backgroundColor: '#000',
            '-webkit-border-radius': '10px',
            '-moz-border-radius': '10px',
            opacity: .5,
            color: '#fff'
          }
        });
        $('#tblcontents').click();

        setTimeout(function(){
          $('#menu-toc li.menu-toc-current').last().click();

          var user_book_id;
          user_book_id = $('#menu-toc li:first').data('user-book-id');
          $.ajax({
            type: 'POST',
            url: '/book_readers/get_highlighters',
            data: {
              books_user: {
                id: user_book_id
              }
            },
            dataType: "json",
            success: function(data, textStatus, jqXHR) {
              data.forEach(function(highlighter) {
                item = $('#bb-bookblock .bb-item[data-chapter-id="' + highlighter.chapter_id + '"]');
                item.highlight(highlighter.content);
              });

              setTimeout(function(){
                $.unblockUI();
              }, 1500);
            },
            error: function(data, textStatus, jqXHR) {
              noty({
                text: 'Server Error',
                type: 'error'
              });
            }
          });


        }, 300);
      });